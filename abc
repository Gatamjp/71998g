import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class StringTransformation {
    public static void main(String[] args) {
        List<String> inputList = Arrays.asList("apple", "banana", "orange");
        List<String> transformedList = transformStrings(inputList);
        
        // Printing the transformed strings
        for (String str : transformedList) {
            System.out.println(str);
        }
    }

    public static List<String> transformStrings(List<String> inputList) {
        return inputList.stream()
            .map(str -> {
                // Replace vowels with numeric values
                String transformed = str.replaceAll("a", "1")
                    .replaceAll("e", "2")
                    .replaceAll("i", "3")
                    .replaceAll("o", "4")
                    .replaceAll("u", "5");
                
                // Reverse the string
                StringBuilder reversed = new StringBuilder(transformed).reverse();
                
                // Capitalize the first letter
                reversed.setCharAt(0, Character.toUpperCase(reversed.charAt(0)));
                
                return reversed.toString();
            })
            .toList(); // If using Java 16+, use .toList() for collecting the results
    }
}
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class StringTransformation {
    public static void main(String[] args) {
        List<String> inputList = Arrays.asList("apple", "banana", "orange");
        List<String> transformedList = transformStrings(inputList);

        // Printing the transformed strings
        transformedList.forEach(System.out::println);
    }

    public static List<String> transformStrings(List<String> inputList) {
        return inputList.stream()
                .map(str -> {
                    // Replace vowels with numeric values
                    String transformed = str.replaceAll("a", "1")
                            .replaceAll("e", "2")
                            .replaceAll("i", "e") // Changed i to 'e'
                            .replaceAll("o", "4")
                            .replaceAll("u", "5");

                    // Reverse the string
                    StringBuilder reversed = new StringBuilder(transformed).reverse();

                    // Capitalize the first letter
                    reversed.setCharAt(0, Character.toUpperCase(reversed.charAt(0)));

                    return reversed.toString();
                })
                .collect(Collectors.toList());
    }
}

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class StringTransformation {
    public static void main(String[] args) {
        List<String> inputList = Arrays.asList("apple", "banana", "orange");
        List<String> transformedList = transformStrings(inputList);
        
        // Printing the transformed strings
        for (String str : transformedList) {
            System.out.println(str);
        }
    }

    public static List<String> transformStrings(List<String> inputList) {
        return inputList.stream()
            .map(str -> {
                // Replace vowels with numeric values
                String transformed = str.replaceAll("a", "1")
                    .replaceAll("e", "2")
                    .replaceAll("i", "3")
                    .replaceAll("o", "4")
                    .replaceAll("u", "5");
                
                // Reverse the string
                StringBuilder reversed = new StringBuilder(transformed).reverse();
                
                // Capitalize the first letter
                reversed.setCharAt(0, Character.toUpperCase(reversed.charAt(0)));
                
                return reversed.toString();
            })
            .toList(); // If using Java 16+, use .toList() for collecting the results
    }
}
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class StringTransformation {
    public static void main(String[] args) {
        List<String> inputList = Arrays.asList("apple", "banana", "orange");
        List<String> transformedList = transformStrings(inputList);

        // Printing the transformed strings
        transformedList.forEach(System.out::println);
    }

    public static List<String> transformStrings(List<String> inputList) {
        return inputList.stream()
                .map(str -> {
                    // Replace vowels with numeric values
                    String transformed = str.replaceAll("a", "1")
                            .replaceAll("e", "2")
                            .replaceAll("i", "e") // Changed i to 'e'
                            .replaceAll("o", "4")
                            .replaceAll("u", "5");

                    // Reverse the string
                    StringBuilder reversed = new StringBuilder(transformed).reverse();

                    // Capitalize the first letter
                    reversed.setCharAt(0, Character.toUpperCase(reversed.charAt(0)));

                    return reversed.toString();
                })
                .collect(Collectors.toList());
    }
}


<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>com.example</groupId>
    <artifactId>student-microservice</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>
    
    <name>Student Microservice</name>
    
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.3</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    
    <properties>
        <java.version>11</java.version>
    </properties>
    
    <dependencies>
        <!-- Spring Boot Starter Web for RESTful APIs -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        
        <!-- Spring Boot Starter Data JPA for database access -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        
        <!-- MySQL connector -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.28</version>
        </dependency>
        
        <!-- Spring Boot Starter Test for testing -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
    <build>
        <plugins>
            <!-- Spring Boot Maven plugin for building executable jar -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>


